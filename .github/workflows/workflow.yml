name: Deploy Spring Boot to VPS

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # üß± 1. R√©cup√©ration du code source
      - name: Checkout code
        uses: actions/checkout@v3

      # ‚òï 2. Configuration de Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # üß∞ 3. Build du projet
      - name: Build with Maven
        run: |
          set -e
          mvn clean package -DskipTests

      # üîç 4. V√©rification du dossier target/
      - name: Check build output
        run: ls -lah target

      # üì¶ 5. Copie du fichier .jar sur le VPS
      - name: Copy JAR to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: "target/*.jar"
          target: "/root/dvente-api"
          strip_components: 1

      # üöÄ 6. D√©ploiement sur le VPS
      - name: Deploy on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd /root/dvente-api
            echo "‚û°Ô∏è D√©ploiement en cours sur le VPS..."

            # Cr√©er le dossier de backup s'il n'existe pas
            mkdir -p backup

            # V√©rifier si le JAR existe avant de renommer
            if ls *.jar 1> /dev/null 2>&1; then
              # Sauvegarde de l'ancienne version si elle existe
              if [ -f app.jar ]; then
                echo "üîÑ Sauvegarde de l'ancienne version..."
                mv app.jar backup/app.jar
              fi
              # Renommer le nouveau JAR
              mv *.jar app.jar
            else
              echo "‚ùå Aucun JAR trouv√© √† d√©ployer"
              exit 1
            fi

            echo "üîÑ Red√©marrage du service springboot-app..."
            systemctl restart springboot-app

            # Attendre que l'application d√©marre
            sleep 15

            # V√©rification du statut du service
            if systemctl is-active --quiet springboot-app; then
              echo "‚úÖ Service d√©marr√© avec succ√®s !"
            else
              echo "‚ùå D√©ploiement √©chou√©, restauration du backup..."
              if [ -f backup/app.jar ]; then
                mv backup/app.jar app.jar
                systemctl restart springboot-app
              fi
              exit 1
            fi

      # ü©∫ 7. Health check sur l'application
      - name: Health Check
        run: |
          echo "‚è≥ V√©rification du statut de sant√© de l'application..."
          sleep 5
          response=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.VPS_HOST }}:8000/actuator/health || echo "000")
          if [ "$response" == "200" ]; then
            echo "‚úÖ Health check pass√© !"
          else
            echo "‚ùå Health check √©chou√© avec le code : $response"
            exit 1
          fi
