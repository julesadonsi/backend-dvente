name: Deploy Spring Boot to VPS

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # üß± 1. R√©cup√©ration du code source
      - name: Checkout code
        uses: actions/checkout@v4

      # ‚òï 2. Configuration de Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # üß∞ 3. Build du projet
      - name: Build with Maven
        run: |
          set -e
          mvn clean package -DskipTests


      - name: Backup current JAR on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          timeout: 60s
          script: |
            cd /root/dvente-api
            
            if [ -f app.jar ]; then
              echo "üíæ Sauvegarde de l'ancienne version..."
              TIMESTAMP=$(date +%Y%m%d_%H%M%S)
              cp app.jar "app.jar.backup_$TIMESTAMP"
            
              # Garder seulement les 5 derni√®res sauvegardes
              ls -t app.jar.backup_* 2>/dev/null | tail -n +6 | xargs -r rm
            
              echo "‚úÖ Sauvegarde cr√©√©e: app.jar.backup_$TIMESTAMP"
            else
              echo "‚ÑπÔ∏è Aucune version pr√©c√©dente √† sauvegarder (premier d√©ploiement)"
            fi

      - name: Copy JAR to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: "target/*.jar"
          target: "/root/dvente-api"
          strip_components: 1
          timeout: 300s

      # üöÄ 7. D√©ploiement sur le VPS
      - name: Deploy on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          timeout: 300s
          script: |
            set -e
            cd /root/dvente-api
            
            echo "‚û°Ô∏è D√©ploiement en cours sur le VPS..."
            
            # V√©rification que le fichier JAR existe
            JAR_FILE=$(ls -1 *.jar 2>/dev/null | grep -v backup | head -n 1)
            if [ -z "$JAR_FILE" ]; then
              echo "‚ùå Aucun fichier JAR trouv√© dans /root/dvente-api"
              exit 1
            fi
            
            echo "üì¶ Fichier JAR d√©tect√©: $JAR_FILE"
            
            # Renommer le nouveau jar
            mv "$JAR_FILE" app.jar
            
            echo "üîÑ Red√©marrage du service springboot-app..."
            systemctl restart springboot-app
            
            # Attendre le d√©marrage
            echo "‚è≥ Attente du d√©marrage de l'application..."
            sleep 15
            
            # V√©rification du statut du service
            if systemctl is-active --quiet springboot-app; then
              echo "‚úÖ Service d√©marr√© avec succ√®s!"
              systemctl status springboot-app --no-pager
            else
              echo "‚ùå √âchec du d√©marrage du service!"
              echo "üìã Logs du service:"
              journalctl -u springboot-app -n 50 --no-pager
            
              # Rollback automatique si backup disponible
              LATEST_BACKUP=$(ls -t app.jar.backup_* 2>/dev/null | head -n 1)
              if [ -n "$LATEST_BACKUP" ]; then
                echo "üîô Rollback vers: $LATEST_BACKUP"
                cp "$LATEST_BACKUP" app.jar
                systemctl restart springboot-app
                sleep 10
                if systemctl is-active --quiet springboot-app; then
                  echo "‚úÖ Rollback r√©ussi!"
                else
                  echo "‚ùå Le rollback a √©galement √©chou√©!"
                fi
              fi
              exit 1
            fi

      # üéâ 8. Notification de succ√®s
      - name: Deployment successful
        if: success()
        run: echo "üéâ D√©ploiement r√©ussi sur le VPS!"

      # ‚ö†Ô∏è 9. Notification d'√©chec
      - name: Deployment failed
        if: failure()
        run: |
          echo "‚ùå Le d√©ploiement a √©chou√©. V√©rifiez les logs ci-dessus."
          exit 1